version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "ap-northeast-1"
    ACCOUNT_ID: "963220189927"
    ECR_REPO_PHP: "ecr-php-yoshiike-20251019"
    ECR_REPO_PHP_Apache: "ecr-php-apache-yoshiike-20251019"
    CONTAINER_NAME: "php"
    TASK_FAMILY: "task-php-yoshiike-20251019"
    CONTAINER_PORT: "80"
    TASK_ROLE: "TaskExecutionRole-yoshiike-20251019"

phases:

  pre_build:
    commands:
      - echo "Login to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Build Docker image for php...
      - docker build --build-arg ACCOUNT_ID=$ACCOUNT_ID --build-arg REGION=$AWS_DEFAULT_REGION --build-arg ECR_REPO_PHP_Apache=$ECR_REPO_PHP_Apache -t $ECR_REPO_PHP:latest ./app
      - docker tag $ECR_REPO_PHP:latest $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_PHP:latest

  post_build:
    commands:
      - echo "Push Docker image to ECR..."
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_PHP:latest

      - echo "Generate taskdef-php.json..."
      - |
        cat <<EOF > taskdef-php.json
        {
          "family": "${TASK_FAMILY}",
          "networkMode": "awsvpc",
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "512",
          "memory": "1024",
          "executionRoleArn": "arn:aws:iam::${ACCOUNT_ID}:role/${TASK_ROLE}",
          "containerDefinitions": [
            {
              "name": "${CONTAINER_NAME}",
              "image": "${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO_PHP}:latest",
              "portMappings": [
                {
                  "containerPort": ${CONTAINER_PORT},
                  "protocol": "tcp"
                }
              ],
              "essential": true
            }
          ]
        }
        EOF
      - echo "Copy appspec-php.yaml..."
      - ls -l CodeDeploy/
      - pwd
      - cp CodeDeploy/appspec-php.yaml ./ # appspecファイルをビルド成果物に含める
      - echo "Generated files:"
      - ls -l

artifacts:
  type: zip
  files:
    - ECS/taskdef-php.json
    - CodeDeploy/appspec-php.yaml
